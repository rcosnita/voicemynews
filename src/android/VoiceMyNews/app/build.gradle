apply plugin: 'com.android.application'

task copyJsCoreFiles(type: Copy) {
    from "../../../core/js"
    into "src/main/assets/js"
}

task copyJsThirdPartiesQ(type: Copy) {
    from "../../../../node_modules/q"
    into "src/main/assets/js/third_party/q"
}

task copyJsThirdPartiesHtmlParser(type: Copy) {
    from "../../../../node_modules/htmlparser"
    into "src/main/assets/js/third_party/htmlparser"
}

task cleanupJsFolder(type: Delete) {
    logger.info("Deleting folder src/main/assets/js")
    delete "src/main/assets/js"
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.voicemynews.voicemynews"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=gcc", "-DANDROID_STL=c++_static"
                cppFlags "-std=c++14 -frtti -fexceptions"
            }
        }
    }
    buildTypes {
        release {
            externalNativeBuild {
                cmake {
                    arguments "-DPROD_BUILD=true"
                    cppFlags "-std=c++14 -frtti -fexceptions -DPROD_BUILD"
                    targets "voicemynews-core", "voicemynews-android", "v8-android-libplatform", "v8-android-base", "v8-android-libbase", "v8-android-snapshot"
                }
            }
            minifyEnabled false
            ndk {
                abiFilters "x86_64", "x86", "arm64-v8a", "armeabi-v7a"
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            externalNativeBuild {
                cmake {
                    arguments "-DDEV_BUILD=true"
                    cppFlags "-std=c++14 -frtti -fexceptions -DDEV_BUILD"
                    targets "voicemynews-core", "voicemynews-android", "v8-android-libplatform", "v8-android-base", "v8-android-libbase", "v8-android-snapshot", "v8-android-libsampler"
                }
            }
            debuggable true
            jniDebuggable true
            minifyEnabled false
            ndk {
                abiFilters "x86_64", "x86", "arm64-v8a", "armeabi-v7a"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
    splits {
        abi {
            enable true
            reset()
            include "x86_64", "x86", "arm64-v8a", "armeabi-v7a"
            universalApk false
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    testCompile 'junit:junit:4.12'
}

preBuild {
}.dependsOn(cleanupJsFolder, copyJsCoreFiles, copyJsThirdPartiesQ, copyJsThirdPartiesHtmlParser)
clean.dependsOn(cleanupJsFolder, copyJsCoreFiles, copyJsThirdPartiesQ, copyJsThirdPartiesHtmlParser)
